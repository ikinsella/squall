getwd()
cdwd("/Users/ikinsella/Dev/demo/squall/Examples/")
cd("/Users/ikinsella/Dev/demo/squall/Examples/")
cwd("/Users/ikinsella/Dev/demo/squall/Examples/")
setwd("/Users/ikinsella/Dev/demo/squall/Examples/")
getwd()
source("RFIB/FibWrapper.R")
getwd()
setwd("/Users/ikinsella/Dev/demo/squall/Examples/")
source("RFib/FibWrapper")
library('jsonlite')
readjson
help(readjson)
help(writejson)
help(jsonlite::writejson)
help(tojson)
help(toJson)
help(toJSON)
getwd()
setwd("/Users/ikinsella/Dev/demo/squall/Examples/Params")
setwd("/Users/ikinsella/Dev/demo/squall/Examples/RFib")
params <- fromJSON('params.json')
params <- fromJSON('params.json')
params <- fromJSON('params.json')
params
l <- list(q=c(1,2,3), v='chars')
l
l$q
rm(list=ls())
source('Src/fib.R')
f <- fib_prod(4,5)
f
f <- fib_prod(30,31)
f
f <- fib_prod(30,40)
f
library("jsonlite")
sapply(list.files(pattern="[.]R$", path="RFib/Src/", full.names=TRUE), source);
params <- fromJSON('params.json')
params$A
params
params$K
results <- fib_prod(20,30)
results
write(toJSON(results), 'results.json')
json <- toJSON(results)
results$cpuB
results$cpuB[1]
results$cpuB[2]
results$cpuB$system
rm(list=ls())
source('Src/fib.R')
library("jsonlite")
params <- fromJSON('params.json')
results <- fib_prod(20,30)
results
tB <- proc_time()
source('Src/fib.R')
results <- fib_prod(20,30)
results
results$cpuA
results$cpuA[1]
results$cpuA[1,1]
results$cpuA[3]
results$cpuA = 1
results$cpuB = 1
json <- toJSON(results)
write(json, 'results.json')
results <- fib_prod(20,30)
json <- toJSON(results)
write(json, 'results.json')
fib_prod <- function(A, B) {
t0 <- proc.time()
fibA <- fibonacci(A)
tA <- proc.time()
fibB <- fibonacci(B)
tB <- proc.time()
return (list(product=fibA*fibB,
fibA=fibA,
fibB=fibB,
cpuA=tA - t0,
cpuB=tB - tA))
}
results <- fib_prod(20,30)
results
json <- toJSON(results)
fib_prod <- function(A, B) {
t0 <- proc.time()[3]
fibA <- fibonacci(A)
tA <- proc.time()[3]
fibB <- fibonacci(B)
tB <- proc.time()[3]
return (list(product=fibA*fibB,
fibA=fibA,
fibB=fibB,
cpuA=tA - t0,
cpuB=tB - tA))
}
results <- fib_prod(20,30)
results
json <- toJSON(results)
write(json, 'results.json')
results <- fib_prod(20,30)
write(toJSON(results), 'results.json')
