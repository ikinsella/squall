#!/bin/bash
# script for execution of deployed applications
#
# Sets up the MCR environment for the current $ARCH and executes
# the specified command.
#
cleanup() {

    {# Remove source code tarballs from home directory #}
    {% for url in batch.data_urls %}
    fname=$(basename "{{ url }}")
    if [ -f "$fname" ]; then
	rm -v "$fname"
    fi
    {% endfor %}

    {# Remove transferred data from home directory #}
    {% for url in batch.data_urls %}
    fname=$(basename "{{ url }}")
    if [ -f "$fname" ]; then
	rm -v "$fname"
    fi
    {% endfor %}

    echo "all clean"
}

abort() {
  echo >&2 '
*************
** ABORTED **
*************
'
  echo >&2 "Files at time of error/interrupt"
  echo >&2 "--------------------------------"
  ls >&2 -l

  cleanup

  echo "An error occured. Exiting ..." >&2
  exit 1
}

success() {
  echo '
*************
** SUCCESS **
*************
'
  cleanup

  exit 0
}

{# If an exit or interrupt occurs while the script is executing, run the abort function. #}
trap abort EXIT SIGTERM

{# Ensure that script exits if any command fails #}
set -e

{# Download source code #}
{% for url in batch.code_urls %}
fname=$(basename "{{ url }}")
wget -q "{{ url }}"
{# If failed, retry download up to 5 times #}
DOWNLOAD_STATUS=$?
i=0
while [ ! $DOWNLOAD_STATUS -eq 0 ] && [ $i -lt 5 ] ; do
    rm -v "$fname"
    wget -q "{{ url }}"
    DOWNLOAD_STATUS=$?
    i++
done
{# Unzip directory #}
tar xzf "$fname"
{% endfor %}

{# Download all large data files listed in URLS from SQUID #}
{% for url in batch.data_urls %}
fname=$(basename "{{ url }}")
wget -q "{{ url }}"
DOWNLOAD_STATUS=$?
i=0
while [ ! $DOWNLOAD_STATUS -eq 0 ] && [ $i -lt 5 ] ; do
    rm "r2013b.tar.gz"
    wget -q "http://proxy.chtc.wisc.edu/SQUID/r2013b.tar.gz"
    DOWNLOAD_STATUS=$?
    i++
done
{% endfor %}

{# Run the setup scripts #}
{% for setup_script  in batch.setup_scripts %}source "{{ setup_script }}"
{% endfor %}

{# Execute Application #}
exe_dir=`dirname "$0"`
eval "${exe_dir}/{{ batch.exe }}"

{# Exit Successfully #}
trap success EXIT SIGTERM
